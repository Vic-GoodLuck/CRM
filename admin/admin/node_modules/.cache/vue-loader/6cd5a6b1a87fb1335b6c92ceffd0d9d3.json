{"remainingRequest":"C:\\Users\\Lenovo\\Desktop\\blog\\blogadmin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Lenovo\\Desktop\\blog\\blogadmin\\src\\views\\play\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Lenovo\\Desktop\\blog\\blogadmin\\src\\views\\play\\index.vue","mtime":1670672566593},{"path":"C:\\Users\\Lenovo\\Desktop\\blog\\blogadmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1666323412932},{"path":"C:\\Users\\Lenovo\\Desktop\\blog\\blogadmin\\node_modules\\babel-loader\\lib\\index.js","mtime":1666323415343},{"path":"C:\\Users\\Lenovo\\Desktop\\blog\\blogadmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1666323412932},{"path":"C:\\Users\\Lenovo\\Desktop\\blog\\blogadmin\\node_modules\\vue-loader\\lib\\index.js","mtime":1666323415965}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/play","sourcesContent":["<!--视频列表-->\r\n<template>\r\n  <div style=\"text-align: left\">\r\n    <el-card>\r\n      <el-breadcrumb style=\"margin-bottom:15px;\" separator=\"/\">\r\n        <el-breadcrumb-item :to=\"{ path: '/' }\">首页</el-breadcrumb-item>\r\n        <el-breadcrumb-item :to=\"{ path: '/play' }\">视频管理</el-breadcrumb-item>\r\n        <el-breadcrumb-item>视频列表</el-breadcrumb-item>\r\n      </el-breadcrumb>\r\n      <el-divider></el-divider>\r\n      <div style=\"padding: 10px 0\">\r\n        <el-input v-model=\"name_select\" class=\"ml-5\" suffix-icon=\"el-icon-search\" placeholder=\"请输入视频标题\" style=\"width: 300px;margin:10px;\"></el-input>\r\n        <el-button @click=\"conditionSelect\" class=\"ml-5\" type=\"primary\">搜索</el-button>\r\n      </div>\r\n    <el-row>\r\n      <el-col :span=\"8\" v-for=\"(item, i) in adminList\" :key=\"i\">\r\n        <div class=\"mr30 mt10\">\r\n          <div style=\"display:flex;\">\r\n            <div class=\"video-title\" style=\"text-align: center\">{{ item.name }}</div>\r\n            <el-button type=\"danger\" style=\"margin-left:0px;margin-bottom: 5px;\" @click=\"deletevideo(item.id)\">删除</el-button>\r\n          </div>\r\n          <video\r\n            ref=\"video\"\r\n            :id=\"'myVideos' + i\"\r\n            class=\"video-js vjs-default-skin vjs-big-play-centered mt10\"\r\n            @click=\"toplay(item.id)\"\r\n          >\r\n            <source :src=\"item.videoUrl\" />\r\n          </video>\r\n        </div>\r\n      </el-col>\r\n    </el-row>\r\n      <el-pagination\r\n          @current-change=\"currentChange\"\r\n          @size-change=\"sizeChange\"\r\n          :current-page.sync=\"currentPage\"\r\n          :page-size=\"size\"\r\n          layout=\"prev, pager, next, jumper, ->, total\"\r\n          :total=\"total\"\r\n          style=\"margin-left: 450px; margin-top: 20px;\">\r\n      </el-pagination>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      hasRole:null,\r\n      pageName:\"视频列表\",\r\n\r\n      name_select:\"\",\r\n      // 视频\r\n      adminList: [],\r\n      // 分页\r\n      size:6,\r\n      total:0,\r\n      currentPage:1,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.$http.get(\r\n            `/role/getRole?uid=${JSON.parse(localStorage.getItem('userdata')).id}`,{\r\n              headers: {\r\n                Authorization: \"Bearer \" + JSON.parse(localStorage.getItem('userdata')).token\r\n              }\r\n            }\r\n    ).then(res=>{\r\n      let RoleName=res.data.obj;\r\n      if(RoleName.includes(this.pageName)){\r\n        this.hasRole=true;\r\n      }else{\r\n        this.hasRole=false;\r\n      }\r\n      if(this.hasRole==false){\r\n        this.$message.error(\"无权访问\");\r\n        this.jump(\"/404\");\r\n        return;\r\n      }\r\n      this.initVideoList();\r\n      this.$forceUpdate();\r\n    })\r\n\r\n  },\r\n  beforeDestroy() {\r\n    //控制 看你页面上显示的多少个  就循环多少次销毁\r\n    // 这儿的element  就是上面 我初始化后获取节点个数\r\n    for (let index = 0; index < this.element; index++) {\r\n      this.$videos(`myVideos${index}`).dispose();\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    //this.jump(\"/404\");\r\n    jump(path) {\r\n      this.$router.push(path);\r\n    },\r\n    async currentChange(currentPage){\r\n        this.currentPage = currentPage;\r\n        if(this.name_select==\"\"){\r\n           this.initVideoList();\r\n        }else{\r\n            const result = await this.$http.get(\r\n                    `/video/conditionSelect?currentPage=${this.currentPage}&size=${this.size}&title=${this.title_select}&checked=1`,{\r\n                      headers: {\r\n                        Authorization: \"Bearer \" + JSON.parse(localStorage.getItem('userdata')).token\r\n                      }\r\n                    }\r\n            );\r\n            if (result.status === 200) {\r\n              this.total = result.data.total;\r\n              this.adminList = result.data.data;\r\n              this.initVideo();\r\n              this.$forceUpdate();\r\n            } else {\r\n              this.$message.error(\"查询失败\");\r\n            }\r\n        }\r\n\r\n    },\r\n    sizeChange(size){\r\n      this.size = size;\r\n      this.initVideoList();\r\n      this.$forceUpdate();\r\n    },\r\n\r\n    //条件查询\r\n    async conditionSelect(){\r\n      this.currentPage=1;\r\n      const result = await this.$http.get(\r\n              `/video/conditionSelect?currentPage=${1}&size=${this.size}&name=${this.name_select}&checked=1`,{\r\n                headers: {\r\n                  Authorization: \"Bearer \" + JSON.parse(localStorage.getItem('userdata')).token\r\n                }\r\n              }\r\n      );\r\n      if (result.status === 200) {\r\n        this.total = result.data.total;\r\n        this.adminList = result.data.data;\r\n        this.initVideo();\r\n        this.$forceUpdate();\r\n        this.$message.success(\"查询成功\");\r\n      } else {\r\n        this.$message.error(\"查询失败\");\r\n      }\r\n    },\r\n\r\n    // 视频播放\r\n   initVideo() {\r\n      let elementList = document.querySelectorAll(\".video-js\");\r\n      this.element = elementList.length; //videojs 数量赋值\r\n      for (let index = 0; index < elementList.length; index++) {\r\n        let id = elementList[index].getAttribute(\"id\");\r\n        this.$videos(\r\n          id,\r\n          {\r\n            autoplay: false, //自动播放\r\n            //   muted:false, // 是否静音,\r\n            controls: true, //控制条\r\n            //   techOrder: ['html5','flash'],//设置flash播放\r\n            language: \"en\", // 初始化语言\r\n            preload: \"auto\", // 预加载\r\n            width: \"250\",\r\n            height: \"120\",\r\n            // 倍速播放\r\n            playbackRates: [0.5, 1, 1.5, 2],\r\n          },\r\n          function () {\r\n            this.volume(0);\r\n            //这个地方很重要,一旦你的muted 不起作用 ,就一定要在设置当前的视频回调中设置声音为0\r\n            //this.play(); //这个地方也一样 ,此方法this.play()==autoplay  是有相同的效果\r\n            this.one(\"playing\", function () {\r\n              // 监听播放\r\n              console.log(\"成功初始化视频\");\r\n            });\r\n\r\n            this.one(\"error\", function (error) {\r\n              // 监听错误\r\n              console.error(\"监听异常\", error);\r\n            });\r\n          }\r\n        );\r\n      }\r\n    },\r\n    // 跳转页面\r\n    toplay(id) {\r\n      this.$router.push({ path: \"videodetail\", query: { id: id } });\r\n    },\r\n    // 分页\r\n    // 初始页currentPage、初始每页数据数pagesize和数据data\r\n     handleSizeChange1: async function (size1) {\r\n      this.pagesize1 = size1;\r\n      console.log(this.pagesize1); //每页下拉显示数据\r\n      const result = await this.$http.get(\r\n        `/video/list?currentPage=${this.currentPage1}&size=${15}`,{\r\n                headers: {\r\n                  Authorization: \"Bearer \" + JSON.parse(localStorage.getItem('userdata')).token\r\n                }\r\n              }\r\n      );\r\n      if (result.status == 200) {\r\n        var that = this;\r\n        that.pagelength1 = result.data.total;\r\n        that.adminList = result.data.data;\r\n        that.initVideo();\r\n        that.$forceUpdate();\r\n      } else {\r\n        this.$message.error(\"获取文章数据失败！\");\r\n      }\r\n    },\r\n    initVideoList(){\r\n      this.$http.get('/video/targetlist?currentPage='+this.currentPage+\"&size=\"+this.size+\"&checked=1\",{\r\n        headers: {\r\n          Authorization: \"Bearer \" + JSON.parse(localStorage.getItem('userdata')).token\r\n        }\r\n      }).then(resp=>{\r\n        if(resp.status===200){\r\n          this.total = resp.data.total;\r\n          this.adminList = resp.data.data;\r\n          this.initVideo();\r\n          this.$forceUpdate();\r\n        }\r\n\r\n      })\r\n    },\r\n    // 删除视频\r\n    deletevideo(id) {\r\n      this.$confirm(\"此操作将永久删除, 是否继续?\", \"提示\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\",\r\n      })\r\n      .then(async() => {\r\n        const result = await this.$http.delete(`/video/delete?id=${id}`,{\r\n          headers: {\r\n            Authorization: \"Bearer \" + JSON.parse(localStorage.getItem('userdata')).token\r\n          }\r\n        })\r\n       if(result.data.code==200){\r\n         this.$message.success(result.data.message);\r\n         this.initVideoList();\r\n         this.$forceUpdate();\r\n       }else{\r\n         this.$message.error(result.data.message);\r\n       }\r\n      })\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.fontExtraLarge {\r\n  white-space: nowrap;\r\n  overflow: hidden !important;\r\n  text-overflow: ellipsis;\r\n  width: 250px;\r\n  // background-color: antiquewhite;\r\n  text-align: left;\r\n}\r\n.video-title{\r\n  white-space: nowrap;\r\n  width: 300px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  color: #555555;\r\n  height: 30px;\r\n  line-height: 30px;\r\n  font-weight: bold;\r\n  font-size: 20px;\r\n  text-align: left;\r\n}\r\n</style>\r\n"]}]}