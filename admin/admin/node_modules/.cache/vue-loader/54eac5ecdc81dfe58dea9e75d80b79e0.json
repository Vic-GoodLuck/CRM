{"remainingRequest":"C:\\Users\\Lenovo\\Desktop\\blog\\blogadmin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Lenovo\\Desktop\\blog\\blogadmin\\src\\views\\videoone\\videoupload.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Lenovo\\Desktop\\blog\\blogadmin\\src\\views\\videoone\\videoupload.vue","mtime":1670672381064},{"path":"C:\\Users\\Lenovo\\Desktop\\blog\\blogadmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1666323412932},{"path":"C:\\Users\\Lenovo\\Desktop\\blog\\blogadmin\\node_modules\\babel-loader\\lib\\index.js","mtime":1666323415343},{"path":"C:\\Users\\Lenovo\\Desktop\\blog\\blogadmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1666323412932},{"path":"C:\\Users\\Lenovo\\Desktop\\blog\\blogadmin\\node_modules\\vue-loader\\lib\\index.js","mtime":1666323415965}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOw0KICAgIGV4cG9ydCBkZWZhdWx0IHsNCiAgICAgICAgZGF0YSgpIHsNCiAgICAgICAgICAgIHJldHVybiB7DQogICAgICAgICAgICAgICAgaGFzUm9sZTpudWxsLA0KICAgICAgICAgICAgICAgIHBhZ2VOYW1lOiLop4bpopHkuIrkvKAiLA0KDQogICAgICAgICAgICAgICAgLy/op4bpopHooajljZXkv6Hmga8NCiAgICAgICAgICAgICAgICBmb3JtMTogew0KICAgICAgICAgICAgICAgICAgICB0aXRsZTogIiIsDQogICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICAvL+inhumikeWcsOWdgA0KICAgICAgICAgICAgICAgIHZpZGVvRm9ybTogew0KICAgICAgICAgICAgICAgICAgICBzdG9yYWdldXJsOiAiIiwNCiAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAgIC8v5paH56ug6KGo5Y2V6aqM6K+BDQogICAgICAgICAgICAgICAgcnVsZXM6IHsNCiAgICAgICAgICAgICAgICAgICAgdGl0bGU6IFt7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAi6K+36L6T5YWl5qCH6aKYIiwgdHJpZ2dlcjogImJsdXIiIH1dLA0KICAgICAgICAgICAgICAgIH0sDQogICAgICAgICAgICB9Ow0KICAgICAgICB9LA0KDQogICAgICAgIG1vdW50ZWQoKSB7DQoNCiAgICAgICAgICAgIHRoaXMuJGh0dHAuZ2V0KA0KICAgICAgICAgICAgICAgIGAvcm9sZS9nZXRSb2xlP3VpZD0ke0pTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3VzZXJkYXRhJykpLmlkfWAsew0KICAgICAgICAgICAgICAgICAgICBoZWFkZXJzOiB7DQogICAgICAgICAgICAgICAgICAgICAgICBBdXRob3JpemF0aW9uOiAiQmVhcmVyICIgKyBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd1c2VyZGF0YScpKS50b2tlbg0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgKS50aGVuKHJlcz0+ew0KICAgICAgICAgICAgICAgIGxldCBSb2xlTmFtZT1yZXMuZGF0YS5vYmo7DQogICAgICAgICAgICAgICAgaWYoUm9sZU5hbWUuaW5jbHVkZXModGhpcy5wYWdlTmFtZSkpew0KICAgICAgICAgICAgICAgICAgICB0aGlzLmhhc1JvbGU9dHJ1ZTsNCiAgICAgICAgICAgICAgICB9ZWxzZXsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5oYXNSb2xlPWZhbHNlOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICBpZih0aGlzLmhhc1JvbGU9PWZhbHNlKXsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcigi5peg5p2D6K6/6ZeuIik7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuanVtcCgiLzQwNCIpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm47DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIHRoaXMuJGZvcmNlVXBkYXRlKCk7DQogICAgICAgICAgICB9KQ0KICAgICAgICB9LA0KDQoNCiAgICAgICAgbWV0aG9kczogew0KICAgICAgICAgICAgLy90aGlzLmp1bXAoIi80MDQiKTsNCiAgICAgICAgICAgIGp1bXAocGF0aCkgew0KICAgICAgICAgICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHBhdGgpOw0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgIGNoYW5nZVVybCgpew0KICAgICAgICAgICAgICAgIGxvY2F0aW9uLnJlbG9hZCgpOw0KICAgICAgICAgICAgfSwNCg0KICAgICAgICAgICAgLy8g5o+Q5Lqk5LiK5Lyg5Zu+54mHL+inhumikeivt+axgg0KICAgICAgICAgICAgZG91cGxvYWQoKSB7DQogICAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLmRlZmF1bHRzLmJhc2VVUkwgKyAiL2ZpbGUvdXBsb2FkIjsNCiAgICAgICAgICAgIH0sDQoNCiAgICAgICAgICAgIC8vIOS4iuS8oOinhumikQ0KICAgICAgICAgICAgb25TdWJtaXQxKCkgew0KICAgICAgICAgICAgICAgIHRoaXMuJHJlZnMuZm9ybTEudmFsaWRhdGUoYXN5bmMgKHZhbGlkKSA9PiB7DQogICAgICAgICAgICAgICAgICAgIGlmICghdmFsaWQpIHJldHVybiB0aGlzLiRtZXNzYWdlLmVycm9yKCLlj5HluIPlpLHotKXvvIEiKTsNCiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2codGhpcy5mb3JtMSk7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuZm9ybTEudmlkZW9VcmwgPSB0aGlzLnZpZGVvRm9ybS5zdG9yYWdldXJsOw0KICAgICAgICAgICAgICAgICAgICB0aGlzLmZvcm0xLnVpZCA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oInVzZXJkYXRhIikpLmlkOw0KICAgICAgICAgICAgICAgICAgICB0aGlzLmZvcm0xLm5hbWUgPSB0aGlzLmZvcm0xLnRpdGxlOw0KICAgICAgICAgICAgICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCB0aGlzLiRodHRwLnBvc3QoIi92aWRlb29uZS9hZGQiLCB0aGlzLmZvcm0xLHsNCiAgICAgICAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBBdXRob3JpemF0aW9uOiAiQmVhcmVyICIgKyBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd1c2VyZGF0YScpKS50b2tlbg0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coIi0tLSIscmVzdWx0KTsNCiAgICAgICAgICAgICAgICAgICAgaWYgKHJlc3VsdC5kYXRhLmNvZGUgPT0gMjAwKSB7DQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MocmVzdWx0LmRhdGEubWVzc2FnZSk7DQogICAgICAgICAgICAgICAgICAgICAgICBsb2NhdGlvbi5yZWxvYWQoKTsNCiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IocmVzdWx0LmRhdGEubWVzc2FnZSk7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICAvL+S4iuS8oOinhumikeWJjeeahOWbnuiwg+WHveaVsA0KICAgICAgICAgICAgYmVmb3JlVXBsb2FkVmlkZW8oZmlsZSkgew0KICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGZpbGUpOw0KICAgICAgICAgICAgICAgIGlmICgNCiAgICAgICAgICAgICAgICAgICAgWw0KICAgICAgICAgICAgICAgICAgICAgICAgInZpZGVvL21wNCIsDQogICAgICAgICAgICAgICAgICAgICAgICAidmlkZW8vb2dnIiwNCiAgICAgICAgICAgICAgICAgICAgICAgICJ2aWRlby9mbHYiLA0KICAgICAgICAgICAgICAgICAgICAgICAgInZpZGVvL2F2aSIsDQogICAgICAgICAgICAgICAgICAgICAgICAidmlkZW8vd212IiwNCiAgICAgICAgICAgICAgICAgICAgICAgICJ2aWRlby9ybXZiIiwNCiAgICAgICAgICAgICAgICAgICAgXS5pbmRleE9mKGZpbGUudHlwZSkgPT09IC0xDQogICAgICAgICAgICAgICAgKSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoIuivt+S4iuS8oOato+ehrueahOinhumikeagvOW8jyIpOw0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgIC8vIOiOt+WPluS4iuS8oOinhumikeWcsOWdgA0KICAgICAgICAgICAgaGFuZGxlVmlkZW9TdWNjZXNzKHJlcywgZmlsZSkgew0KICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcyxmaWxlKTsNCiAgICAgICAgICAgICAgICB0aGlzLnZpZGVvRm9ybS5zdG9yYWdldXJsID0gcmVzLm9iajsNCiAgICAgICAgICAgIH0sDQogICAgICAgIH0sDQogICAgfTsNCg=="},{"version":3,"sources":["videoupload.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"videoupload.vue","sourceRoot":"src/views/videoone","sourcesContent":["<!--视频列表-->\r\n<template>\r\n    <div style=\"text-align: left\">\r\n        <el-card>\r\n            <el-breadcrumb style=\"margin-bottom:15px;\" separator=\"/\">\r\n                <el-breadcrumb-item :to=\"{ path: '/' }\">首页</el-breadcrumb-item>\r\n                <el-breadcrumb-item :to=\"{ path: '/videoone' }\">轮播视频</el-breadcrumb-item>\r\n                <el-breadcrumb-item>视频上传</el-breadcrumb-item>\r\n            </el-breadcrumb>\r\n            <el-divider></el-divider>\r\n            <el-form ref=\"form1\" :model=\"form1\" label-width=\"80px\" :rules=\"rules\">\r\n                <el-form-item label=\"视频标题\" style=\"width: 450px\" prop=\"title\">\r\n                    <el-input v-model=\"form1.title\"></el-input>\r\n                </el-form-item>\r\n                <!-- 视频上传 -->\r\n                <el-form-item\r\n                        label=\"视频上传\"\r\n                        prop=\"storageurl\"\r\n                        style=\"width: 300px\"\r\n                >\r\n                    <el-upload\r\n                            class=\"avatar-uploader el-upload--text\"\r\n                            :action=\"doupload()\"\r\n                            :show-file-list=\"false\"\r\n                            :on-success=\"handleVideoSuccess\"\r\n                            :before-upload=\"beforeUploadVideo\"\r\n                    >\r\n                        <!--                已经上传了视频则播放，未上传就显示图标-->\r\n                        <video v-if=\"videoForm.storageurl != ''\"\r\n                               :src=\"videoForm.storageurl\"\r\n                               class=\"avatar\"\r\n                               controls=\"controls\"\r\n                        ></video>\r\n                        <i v-else-if=\"videoForm.storageurl == ''\" class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n                    </el-upload>\r\n                </el-form-item>\r\n                <!--选项-->\r\n                <el-form-item>\r\n                    <el-button type=\"primary\" @click=\"onSubmit1\">上传</el-button>\r\n                    <el-button @click=\"changeUrl\">取消</el-button>\r\n                </el-form-item>\r\n            </el-form>\r\n        </el-card>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n    export default {\r\n        data() {\r\n            return {\r\n                hasRole:null,\r\n                pageName:\"视频上传\",\r\n\r\n                //视频表单信息\r\n                form1: {\r\n                    title: \"\",\r\n                },\r\n                //视频地址\r\n                videoForm: {\r\n                    storageurl: \"\",\r\n                },\r\n                //文章表单验证\r\n                rules: {\r\n                    title: [{ required: true, message: \"请输入标题\", trigger: \"blur\" }],\r\n                },\r\n            };\r\n        },\r\n\r\n        mounted() {\r\n\r\n            this.$http.get(\r\n                `/role/getRole?uid=${JSON.parse(localStorage.getItem('userdata')).id}`,{\r\n                    headers: {\r\n                        Authorization: \"Bearer \" + JSON.parse(localStorage.getItem('userdata')).token\r\n                    }\r\n                }\r\n            ).then(res=>{\r\n                let RoleName=res.data.obj;\r\n                if(RoleName.includes(this.pageName)){\r\n                    this.hasRole=true;\r\n                }else{\r\n                    this.hasRole=false;\r\n                }\r\n                if(this.hasRole==false){\r\n                    this.$message.error(\"无权访问\");\r\n                    this.jump(\"/404\");\r\n                    return;\r\n                }\r\n                this.$forceUpdate();\r\n            })\r\n        },\r\n\r\n\r\n        methods: {\r\n            //this.jump(\"/404\");\r\n            jump(path) {\r\n                this.$router.push(path);\r\n            },\r\n            changeUrl(){\r\n                location.reload();\r\n            },\r\n\r\n            // 提交上传图片/视频请求\r\n            doupload() {\r\n                return axios.defaults.baseURL + \"/file/upload\";\r\n            },\r\n\r\n            // 上传视频\r\n            onSubmit1() {\r\n                this.$refs.form1.validate(async (valid) => {\r\n                    if (!valid) return this.$message.error(\"发布失败！\");\r\n                    console.log(this.form1);\r\n                    this.form1.videoUrl = this.videoForm.storageurl;\r\n                    this.form1.uid = JSON.parse(localStorage.getItem(\"userdata\")).id;\r\n                    this.form1.name = this.form1.title;\r\n                    const result = await this.$http.post(\"/videoone/add\", this.form1,{\r\n                        headers: {\r\n                            Authorization: \"Bearer \" + JSON.parse(localStorage.getItem('userdata')).token\r\n                        }\r\n                    });\r\n                    // console.log(\"---\",result);\r\n                    if (result.data.code == 200) {\r\n                        this.$message.success(result.data.message);\r\n                        location.reload();\r\n                    } else {\r\n                        this.$message.error(result.data.message);\r\n                    }\r\n                });\r\n            },\r\n            //上传视频前的回调函数\r\n            beforeUploadVideo(file) {\r\n                console.log(file);\r\n                if (\r\n                    [\r\n                        \"video/mp4\",\r\n                        \"video/ogg\",\r\n                        \"video/flv\",\r\n                        \"video/avi\",\r\n                        \"video/wmv\",\r\n                        \"video/rmvb\",\r\n                    ].indexOf(file.type) === -1\r\n                ) {\r\n                    this.$message.error(\"请上传正确的视频格式\");\r\n                    return false;\r\n                }\r\n            },\r\n            // 获取上传视频地址\r\n            handleVideoSuccess(res, file) {\r\n                console.log(res,file);\r\n                this.videoForm.storageurl = res.obj;\r\n            },\r\n        },\r\n    };\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n    .avatar-uploader-icon {\r\n        border: 1px dashed #d9d9d9 !important;\r\n    }\r\n    .avatar-uploader .el-upload {\r\n        border: 1px dashed #d9d9d9 !important;\r\n        /*border-radius: 6px !important;*/\r\n        position: relative !important;\r\n        overflow: hidden !important;\r\n    }\r\n    .avatar-uploader .el-upload:hover {\r\n        border: 1px dashed #d9d9d9 !important;\r\n        border-color: #409eff;\r\n    }\r\n    .avatar-uploader-icon {\r\n        font-size: 28px;\r\n        color: #8c939d;\r\n        width: 300px;\r\n        height: 178px;\r\n        line-height: 178px;\r\n        text-align: center;\r\n    }\r\n    .avatar {\r\n        width: 300px;\r\n        height: 178px;\r\n        display: block;\r\n    }\r\n</style>\r\n"]}]}