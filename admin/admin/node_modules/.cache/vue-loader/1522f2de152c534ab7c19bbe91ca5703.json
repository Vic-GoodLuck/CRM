{"remainingRequest":"C:\\Users\\Lenovo\\Desktop\\code\\admin\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Lenovo\\Desktop\\code\\admin\\admin\\src\\views\\area\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Lenovo\\Desktop\\code\\admin\\admin\\src\\views\\area\\index.vue","mtime":1687157824841},{"path":"C:\\Users\\Lenovo\\Desktop\\code\\admin\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1666323412932},{"path":"C:\\Users\\Lenovo\\Desktop\\code\\admin\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1666323415343},{"path":"C:\\Users\\Lenovo\\Desktop\\code\\admin\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1666323412932},{"path":"C:\\Users\\Lenovo\\Desktop\\code\\admin\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1666323415965}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmIA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;AAGA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/area","sourcesContent":["<!--用户列表-->\r\n<template>\r\n    <div>\r\n        <el-card class=\"box-card\" style=\"width: 100%\">\r\n            <el-breadcrumb style=\"margin-bottom:15px;\" separator=\"/\">\r\n                <el-breadcrumb-item :to=\"{ path: '/' }\">首页</el-breadcrumb-item>\r\n                <el-breadcrumb-item :to=\"{ path: '/userdetail' }\">基础数据</el-breadcrumb-item>\r\n                <el-breadcrumb-item>数据字典-地区</el-breadcrumb-item>\r\n            </el-breadcrumb>\r\n            <el-divider></el-divider>\r\n\r\n            <!-- 添加信息 -->\r\n            <el-form :inline=\"true\" :model=\"formInline\" class=\"demo-form-inline\">\r\n                <el-form-item>\r\n                    <div>\r\n                        <el-button type=\"primary\" @click=\"dialogFormVisible = true\">添加 <i class=\"el-icon-circle-plus-outline\"></i></el-button>\r\n                        <el-button type=\"danger\" @click=\"deleteBatch\">批量删除 <i class=\"el-icon-remove-outline\"></i></el-button>\r\n                    </div>\r\n                    <!--          添加用户弹出框-->\r\n                    <el-dialog\r\n                            title=\"添加地区\"\r\n                            :visible.sync=\"dialogFormVisible\"\r\n                            width=\"40%\"\r\n                            append-to-body\r\n                            center\r\n                    >\r\n\r\n                        <el-form\r\n                                :model=\"form\"\r\n                                style=\":form\"\r\n                        >\r\n                            <el-form-item\r\n                                    label=\"地区名称:\"\r\n                                    :label-width=\"formLabelWidth\"\r\n                                    prop=\"daName\"\r\n                            >\r\n                                <el-input v-model.trim=\"form.daName\" autocomplete=\"off\"></el-input>\r\n                            </el-form-item>\r\n                        </el-form>\r\n                        <div slot=\"footer\" class=\"dialog-footer\">\r\n                            <el-button type=\"primary\" @click=\"submitadd()\">添加</el-button>\r\n                            <el-button @click=\"dialogFormVisible = false\">取消</el-button>\r\n                        </div>\r\n                    </el-dialog>\r\n                </el-form-item>\r\n            </el-form>\r\n\r\n            <!-- 编辑用户信息 -->\r\n            <el-dialog\r\n                    title=\"修改地区名称\"\r\n                    :visible.sync=\"dialogFormVisible1\"\r\n                    width=\"40%\"\r\n                    append-to-body\r\n                    center\r\n            >\r\n\r\n                <el-form\r\n                        :model=\"form1\"\r\n                        style=\":form1\"\r\n                >\r\n                    <el-form-item\r\n                            label=\"地区编号:\"\r\n                            :label-width=\"formLabelWidth\"\r\n                            prop=\"daId\"\r\n                    >\r\n                        <el-input\r\n                                v-model=\"form1.daId\"\r\n                                autocomplete=\"off\"\r\n                                disabled\r\n                        ></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item\r\n                            label=\"地区名称:\"\r\n                            :label-width=\"formLabelWidth\"\r\n                            prop=\"daName\"\r\n                    >\r\n                        <el-input\r\n                                v-model=\"form1.daName\"\r\n                                autocomplete=\"off\"\r\n                        ></el-input>\r\n                    </el-form-item>\r\n\r\n                </el-form>\r\n                <div slot=\"footer\" class=\"dialog-footer\">\r\n                    <el-button type=\"primary\" @click=\"editdetail()\">提交</el-button>\r\n                    <el-button @click=\"dialogFormVisible1 = false\">取消</el-button>\r\n                </div>\r\n            </el-dialog>\r\n\r\n            <!--      用户信息表格-->\r\n            <el-table\r\n                    :data=\"tableData\"\r\n                    border\r\n                    :row-style=\"{ height: '15px' }\"\r\n                    :cell-style=\"{ padding: '0px' }\"\r\n                    max-height=\"1000\"\r\n                    style=\"width: 45%\"\r\n                    @selection-change=\"handleSelectionChange\">\r\n                >\r\n                <el-table-column\r\n                        type=\"selection\"\r\n                        width=\"50\">\r\n                </el-table-column>\r\n                <el-table-column prop=\"daId\" label=\"地区编号\" width=\"150\">\r\n                </el-table-column>\r\n                <el-table-column prop=\"daName\" label=\"地区名称\" width=\"150\">\r\n                </el-table-column>\r\n                <el-table-column fixed=\"right\" label=\"操作\" width=\"180\">\r\n                    <template slot-scope=\"scope\">\r\n                        <el-button @click=\"handleClick(scope.row)\" type=\"success\" size=\"small\">编辑 <i class=\"el-icon-edit\"></i></el-button>\r\n                        <el-button @click=\"deteleUser(scope.row)\" type=\"danger\" size=\"small\">删除 <i class=\"el-icon-remove-outline\"></i></el-button>\r\n                    </template>\r\n                </el-table-column>\r\n            </el-table>\r\n            <!-- 分页 -->\r\n            <div class=\"block\" style=\"margin-top: 20px;\">\r\n                <el-pagination\r\n                        @size-change=\"handleSizeChange\"\r\n                        @current-change=\"handleCurrentChange\"\r\n                        :current-page.sync=\"currentPage\"\r\n                        :page-size=\"pagesize\"\r\n                        layout=\"prev, pager, next, jumper,->,total\"\r\n                        :total=\"total\"\r\n                >\r\n                </el-pagination>\r\n            </div>\r\n        </el-card>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import axios from \"axios\";\r\n\r\n    export default {\r\n\r\n        mounted() {\r\n            // this.$http.get(\r\n            //         `/role/getRole?uid=${JSON.parse(localStorage.getItem('userdata')).id}`,{\r\n            //           headers: {\r\n            //             Authorization: \"Bearer \" + JSON.parse(localStorage.getItem('userdata')).token\r\n            //           }\r\n            //         }\r\n            // ).then(res=>{\r\n            //   let RoleName=res.data.obj;\r\n            //   if(RoleName.includes(this.pageName)){\r\n            //     this.hasRole=true;\r\n            //   }else{\r\n            //     this.hasRole=false;\r\n            //   }\r\n            //   if(this.hasRole==false){\r\n            //     this.$message.error(\"无权访问\");\r\n            //     this.jump(\"/404\");\r\n            //     return;\r\n            //   }\r\n            //   this.userdata();\r\n            // })\r\n            this.userdata();\r\n\r\n\r\n        },\r\n\r\n\r\n        data() {\r\n            return {\r\n\r\n                pageName:\"用户信息\",\r\n\r\n\r\n                multipleSelection:[],\r\n                total: 1000,\r\n                // 分页\r\n                //currentPage: 1, //初始页\r\n                pagesize: 5, //每页多少数据\r\n                currentPage: 1, //默认当前页为第一页\r\n                //添加用户对话框\r\n                dialogFormVisible: false,\r\n                form: {\r\n                    daId:\"1\",\r\n                    daName:\"\",\r\n                },\r\n                //修改用户的对话框\r\n                dialogFormVisible1: false,\r\n                form1: {\r\n                    daId:\"\",\r\n                    daName:\"\",\r\n                },\r\n                formLabelWidth: \"100px\",\r\n                formInline: {\r\n                    user: \"\",\r\n                },\r\n                tableData: [],\r\n\r\n            };\r\n        },\r\n\r\n        methods: {\r\n            //this.jump(\"/404\");\r\n            jump(path) {\r\n                this.$router.push(path);\r\n            },\r\n            // 获取第一页表格数据\r\n            async userdata() {\r\n\r\n                const result = await this.$http.get(\r\n                    `/dataArea/list?currentPage=${1}&size=${5}`,{\r\n                        headers: {\r\n                            Authorization: \"Bearer \" + JSON.parse(localStorage.getItem('userdata')).token\r\n                        }\r\n                    }\r\n                );\r\n                console.log(result)\r\n                if (result.status === 200) {\r\n                    this.tableData = result.data.data;\r\n                    this.total = Number(result.data.total);\r\n                    this.$forceUpdate();\r\n                }\r\n            },\r\n            handleSelectionChange(val){\r\n                this.multipleSelection=val;\r\n                console.log(val);\r\n            },\r\n            handleClick(row) {\r\n                // 点击编辑获取信息\r\n                this.dialogFormVisible1 = true;\r\n                var tmp=Object.assign({},row);\r\n                this.form1 = tmp;\r\n                console.log(this.form1);\r\n            },\r\n            handleSizeChange(val) {\r\n                console.log(`每页 ${val} 条`);\r\n            },\r\n\r\n            async handleCurrentChange(val) {\r\n                console.log(`当前页: ${val}`);\r\n                const result = await this.$http.get(\r\n                    `/dataArea/list?currentPage=${val}&size=${5}`,{\r\n                        headers: {\r\n                            Authorization: \"Bearer \" + JSON.parse(localStorage.getItem('userdata')).token\r\n                        }\r\n                    }\r\n                );\r\n                if (result.status === 200) {\r\n                    this.tableData = result.data.data;\r\n                    this.total = Number(result.data.total);\r\n                    this.$forceUpdate();\r\n                } else {\r\n                    this.$message.error(\"查询失败\");\r\n                }\r\n\r\n            },\r\n\r\n\r\n            // 添加用户信息\r\n            async submitadd() {\r\n                const result = await this.$http.post(\"/dataArea/add\", this.form,{\r\n                    headers: {\r\n                        Authorization: \"Bearer \" + JSON.parse(localStorage.getItem('userdata')).token\r\n                    }\r\n                });\r\n                console.log(\"---\",result)\r\n                if (result.data.code === 200) {\r\n                    this.$message.success(\"添加成功!\");\r\n                    this.userdata();\r\n                    this.$forceUpdate();\r\n                    this.dialogFormVisible = false;\r\n                    //清除数据\r\n                    this.form = {\r\n                        daId:\"1\",\r\n                        daName:\"\",\r\n                    }\r\n                } else {\r\n                    this.$message.error(result.data.message);\r\n                }\r\n            },\r\n\r\n            // 修改用户信息\r\n            async editdetail() {\r\n                console.log(\"修改用户信息\", this.form1);\r\n                if (this.form1.roleName == \"系统管理员\") {\r\n                    this.form1.userRoleId = 1;\r\n                } else if (this.form1.roleName == \"销售主管\") {\r\n                    this.form1.userRoleId = 2;\r\n                } else if (this.form1.roleName == \"客户经理\") {\r\n                    this.form1.userRoleId = 3;\r\n                } else if (this.form1.roleName == \"高管\") {\r\n                    this.form1.userRoleId = 4;\r\n                }\r\n                this.form1.daId=this.AreaRMap[this.form1.daName]\r\n                const result = await this.$http.put(\"/user/infoModify\", this.form1,{\r\n                    headers: {\r\n                        Authorization: \"Bearer \" + JSON.parse(localStorage.getItem('userdata')).token\r\n                    }\r\n                });\r\n                if (result.data.code === 200) {\r\n                    this.$message.success(\"修改成功！\");\r\n                    await this.userdata();\r\n                    this.$forceUpdate();\r\n                    this.dialogFormVisible1 = false;\r\n                } else if (result.data.code === 500) {\r\n                    this.$message.error(result.data.message);\r\n                    this.userdata();\r\n                } else {\r\n                    this.$message.error(\"修改失败!\");\r\n                }\r\n            },\r\n\r\n            // 删除用户信息\r\n            deteleUser(user) {\r\n                this.$confirm(\"此操作将永久删除, 是否继续?\", \"提示\", {\r\n                    confirmButtonText: \"确定\",\r\n                    cancelButtonText: \"取消\",\r\n                    type: \"warning\",\r\n                })\r\n                    .then(async () => {\r\n                        const result = await this.$http.delete(\"/user/delete?userId=\" + user.userId,{\r\n                            headers: {\r\n                                Authorization: \"Bearer \" + JSON.parse(localStorage.getItem('userdata')).token\r\n                            }\r\n                        });\r\n                        if (result.data.code == 200) {\r\n                            this.$message.success(result.data.message);\r\n                            this.userdata();\r\n                            this.$forceUpdate();\r\n                        } else {\r\n                            this.$message.error(result.data.message);\r\n                        }\r\n                    })\r\n            },\r\n\r\n            deleteBatch(){\r\n                let ids = this.multipleSelection.map(v=>v.userId);\r\n                this.$confirm(\"此操作将永久删除, 是否继续?\", \"提示\", {\r\n                    confirmButtonText: \"确定\",\r\n                    cancelButtonText: \"取消\",\r\n                    type: \"warning\",\r\n                })\r\n                    .then(async () => {\r\n                        const result = await this.$http.post(\"/user/deletebatch\" , ids ,{\r\n                            headers: {\r\n                                Authorization: \"Bearer \" + JSON.parse(localStorage.getItem('userdata')).token\r\n                            }\r\n                        });\r\n                        if (result.data.code == 200) {\r\n                            this.$message.success(result.data.message);\r\n                            this.userdata();\r\n                            this.$forceUpdate();\r\n                        } else {\r\n                            this.$message.error(result.data.message);\r\n                        }\r\n                    })\r\n            },\r\n            // 封装上传文件请求\r\n            doupload() {\r\n                return axios.defaults.baseURL + \"/file/upload\";\r\n            },\r\n            // 成功上传之后的回调函数\r\n            handleAvatarSuccess(res) {\r\n                this.form.avatar = res.obj\r\n                console.log(res);\r\n            },\r\n            beforeAvatarUpload(file) {\r\n                // const isJPG = file.type == \"image/png\";\r\n                const isLt2M = file.size / 1024 / 1024 < 5;\r\n                console.log(file);\r\n                // 实例化一个阅读器对象\r\n                var reader = new FileReader();\r\n                // 读取文件的路径，没有返回值,结果在reader.result里\r\n                reader.readAsDataURL(file);\r\n                // 读取需要时间，读完后再修改图片路径\r\n                var that = this;\r\n                reader.onload = function () {\r\n                    //回显给上方图片中\r\n                    that.form.avatar = this.result;\r\n                };\r\n                if (\r\n                    file.type == \"image/png\" ||\r\n                    file.type == \"image/jpg\" ||\r\n                    file.type == \"image/jpeg\" ||\r\n                    file.type == \"image/JPG\"\r\n                ) {\r\n                    // this.$message.error(\"上传头像图片格式不正确\");\r\n                } else {\r\n                    this.$message.error(\"上传头像图片格式不正确\");\r\n                }\r\n                if (!isLt2M) {\r\n                    this.$message.error(\"上传头像图片大小不能超过 5MB!\");\r\n                }\r\n                return isLt2M;\r\n            },\r\n            // 成功上传之后的回调函数\r\n            handleAvatarSuccess1(res) {\r\n                this.form1.avatar = res.obj\r\n                console.log(res);\r\n            },\r\n            beforeAvatarUpload1(file) {\r\n                // const isJPG = file.type == \"image/png\";\r\n                const isLt2M = file.size / 1024 / 1024 < 5;\r\n                console.log(file);\r\n                // 实例化一个阅读器对象\r\n                var reader = new FileReader();\r\n                // 读取文件的路径，没有返回值,结果在reader.result里\r\n                reader.readAsDataURL(file);\r\n                // 读取需要时间，读完后再修改图片路径\r\n                var that = this;\r\n                reader.onload = function () {\r\n                    //回显给上方图片中\r\n                    that.form1.avatar = this.result;\r\n                };\r\n                if (\r\n                    file.type == \"image/png\" ||\r\n                    file.type == \"image/jpg\" ||\r\n                    file.type == \"image/jpeg\" ||\r\n                    file.type == \"image/JPG\"\r\n                ) {\r\n                    // this.$message.error(\"上传头像图片格式不正确\");\r\n                } else {\r\n                    this.$message.error(\"上传头像图片格式不正确\");\r\n                }\r\n                if (!isLt2M) {\r\n                    this.$message.error(\"上传头像图片大小不能超过 5MB!\");\r\n                }\r\n                return isLt2M;\r\n            },\r\n        },\r\n    };\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n    .carid {\r\n        display: none;\r\n    }\r\n    .demo-form-inline {\r\n        display: flex;\r\n        flex: left;\r\n    }\r\n    .el-form-item {\r\n        margin-bottom: 20px;\r\n    }\r\n    .avatar-uploader .el-upload {\r\n        border: 1px dashed #d9d9d9;\r\n        /*border-radius: 100px;*/\r\n        cursor: pointer;\r\n        position: relative;\r\n        overflow: hidden;\r\n    }\r\n    // .avatar-uploader .el-upload:hover {\r\n    // //   border-color: #409eff;\r\n    // }\r\n    .avatar-uploader-icon {\r\n        font-size: 28px;\r\n        color: #8c939d;\r\n        width: 178px;\r\n        height: 178px;\r\n        line-height: 178px;\r\n        text-align: center;\r\n    }\r\n    .avatar {\r\n        width: 178px;\r\n        height: 178px;\r\n        display: block;\r\n        border-radius: 100px;\r\n    }\r\n    .upload .el-upload__input {\r\n        display: none;\r\n    }\r\n\r\n    input[type=\"file\"] {\r\n        display: none !important;\r\n    }\r\n\r\n</style>\r\n"]}]}