{"remainingRequest":"C:\\Users\\Lenovo\\Desktop\\CRM\\admin\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Lenovo\\Desktop\\CRM\\admin\\admin\\src\\views\\commodity\\index.vue?vue&type=template&id=1c758846&scoped=true&","dependencies":[{"path":"C:\\Users\\Lenovo\\Desktop\\CRM\\admin\\admin\\src\\views\\commodity\\index.vue","mtime":1670850355275},{"path":"C:\\Users\\Lenovo\\Desktop\\CRM\\admin\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1666323412932},{"path":"C:\\Users\\Lenovo\\Desktop\\CRM\\admin\\admin\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1666323417104},{"path":"C:\\Users\\Lenovo\\Desktop\\CRM\\admin\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1666323412932},{"path":"C:\\Users\\Lenovo\\Desktop\\CRM\\admin\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1666323415965}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}