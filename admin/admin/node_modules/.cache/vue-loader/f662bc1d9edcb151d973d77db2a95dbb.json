{"remainingRequest":"C:\\Users\\Lenovo\\Desktop\\blog\\blogadmin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Lenovo\\Desktop\\blog\\blogadmin\\src\\components\\editdetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Lenovo\\Desktop\\blog\\blogadmin\\src\\components\\editdetail.vue","mtime":1670931445586},{"path":"C:\\Users\\Lenovo\\Desktop\\blog\\blogadmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1666323412932},{"path":"C:\\Users\\Lenovo\\Desktop\\blog\\blogadmin\\node_modules\\babel-loader\\lib\\index.js","mtime":1666323415343},{"path":"C:\\Users\\Lenovo\\Desktop\\blog\\blogadmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1666323412932},{"path":"C:\\Users\\Lenovo\\Desktop\\blog\\blogadmin\\node_modules\\vue-loader\\lib\\index.js","mtime":1666323415965}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOw0KZXhwb3J0IGRlZmF1bHQgew0KICBtb3VudGVkKCl7DQogICAgdGhpcy5sb2dpbkZvcm0gPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd1c2VyZGF0YScpKQ0KICB9LA0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgICBpbWFnZVVybDoNCiAgICAgICAgImh0dHBzOi8vaW1nMS5iYWlkdS5jb20vaXQvdT0yODIwMjIyNzg0LDI4NTAxMDY5MDQmZm09MjUzJmFwcD0xMzgmc2l6ZT13OTMxJm49MCZmPUpQRUcmZm10PWF1dG8/c2VjPTE2NjUwNzU2MDAmdD01N2JmOWMxZGU4ZmNkZDk0Y2U5MmM4OTI2ODJhMWZlMyIsDQogICAgICBsb2dpbkZvcm06IHsNCiAgICAgICAgdXNlcm5hbWU6ICIiLA0KICAgICAgICBuaWNrbmFtZToiIiwNCiAgICAgICAgYXZhdGFyOiIiDQogICAgICB9LA0KICAgICAgbG9naW5Gb3JtUnVsZXM6IHsNCiAgICAgICAgdXNlcm5hbWU6IFsNCiAgICAgICAgICB7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAi6K+36L6T5YWl6LSm5Y+3IiwgdHJpZ2dlcjogImJsdXIiIH0sDQogICAgICAgICAgLy8geyBtZXNzYWdlOiAn6ZW/5bqm5pyA5aSa5LiN6LaF6L+HIDEyIOS4quWtl+espicsIHRyaWdnZXI6ICdibHVyJyB9DQogICAgICAgIF0sDQogICAgICAgIG5pY2tuYW1lOiBbDQogICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogIuivt+i+k+WFpeeUqOaIt+WQjSIsIHRyaWdnZXI6ICJibHVyIiB9LA0KICAgICAgICBdLA0KICAgICAgfSwNCiAgICB9Ow0KICB9LA0KICBtZXRob2RzOiB7DQogICAgc3VibWl0KCkgew0KICAgICAgdGhpcy4kcmVmcy5sb2dpbkZvcm1SZWYudmFsaWRhdGUoYXN5bmMgKHZhbGlkKSA9PiB7DQogICAgICAgIGlmICghdmFsaWQpIHJldHVybiB0aGlzLiRtZXNzYWdlLmVycm9yKCLooajljZXpqozor4HlpLHotKXvvIEiKTsNCiAgICAgICAgY29uc29sZS5sb2codGhpcy5sb2dpbkZvcm0pOw0KICAgICAgICB2YXIgdXNlciA9IHRoaXMubG9naW5Gb3JtOw0KICAgICAgICBjb25zb2xlLmxvZyh1c2VyKTsNCiAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgdGhpcy4kaHR0cC5wdXQoDQogICAgICAgICAgIi91c2VyL2luZm9Nb2RpZnkiLA0KICAgICAgICAgIHRoaXMubG9naW5Gb3JtLHsNCiAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsNCiAgICAgICAgICAgICAgICAgICAgQXV0aG9yaXphdGlvbjogIkJlYXJlciAiICsgSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndXNlcmRhdGEnKSkudG9rZW4NCiAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQogICAgICAgICk7DQogICAgICAgIGNvbnNvbGUubG9nKCJsb2dpbiIsIHJlc3VsdCk7DQogICAgICAgIGlmIChyZXN1bHQuZGF0YS5jb2RlID09PSAyMDApIHsNCiAgICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoIuS/ruaUueaIkOWKnyIpOw0KICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCJ1c2VyZGF0YSIsIEpTT04uc3RyaW5naWZ5KHJlc3VsdC5kYXRhLm9iaikpOw0KICAgICAgICAgIGNvbnNvbGUubG9nKA0KICAgICAgICAgICAgImxvY2Fsc3RvcmFnZSIsDQogICAgICAgICAgICBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCJ1c2VyZGF0YSIpKQ0KICAgICAgICAgICk7DQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcihyZXN1bHQuZGF0YS5tZXNzYWdlKTsNCiAgICAgICAgICAvLyBsb2NhdGlvbi5yZWxvYWQoKTsNCiAgICAgICAgfQ0KICAgICAgICAvLyBjb25zdCByZXMgPSBhd2FpdCB0aGlzLiRodHRwLmdldCgnbG9naW4nLCB7IHBhcmFtczogdGhpcy5sb2dpbkZvcm0gfSkNCiAgICAgIH0pOw0KICAgIH0sDQogICAgcmVzZXRGb3JtKGZvcm1OYW1lKSB7DQogICAgICB0aGlzLiRyZWZzW2Zvcm1OYW1lXS5yZXNldEZpZWxkcygpOw0KICAgIH0sDQogICAgLy8g5bCB6KOF5LiK5Lyg5paH5Lu26K+35rGCDQogICAgZG91cGxvYWQoKSB7DQogICAgICByZXR1cm4gYXhpb3MuZGVmYXVsdHMuYmFzZVVSTCArICIvZmlsZS91cGxvYWQiOw0KICAgIH0sDQogICAgLy8g5oiQ5Yqf5LiK5Lyg5LmL5ZCO55qE5Zue6LCD5Ye95pWwDQogICAgaGFuZGxlQXZhdGFyU3VjY2VzcyhyZXMsKSB7DQogICAgICB0aGlzLmxvZ2luRm9ybS5hdmF0YXIgPSByZXMub2JqDQogICAgICBjb25zb2xlLmxvZyhyZXMpOw0KICAgIH0sDQogICAgYmVmb3JlQXZhdGFyVXBsb2FkKGZpbGUpIHsNCiAgICAgIC8vIGNvbnN0IGlzSlBHID0gZmlsZS50eXBlID09ICJpbWFnZS9wbmciOw0KICAgICAgY29uc3QgaXNMdDJNID0gZmlsZS5zaXplIC8gMTAyNCAvIDEwMjQgPCA1Ow0KICAgICAgY29uc29sZS5sb2coZmlsZSk7DQogICAgICAvLyDlrp7kvovljJbkuIDkuKrpmIXor7vlmajlr7nosaENCiAgICAgIHZhciByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpOw0KICAgICAgLy8g6K+75Y+W5paH5Lu255qE6Lev5b6E77yM5rKh5pyJ6L+U5Zue5YC8LOe7k+aenOWcqHJlYWRlci5yZXN1bHTph4wNCiAgICAgIHJlYWRlci5yZWFkQXNEYXRhVVJMKGZpbGUpOw0KICAgICAgLy8g6K+75Y+W6ZyA6KaB5pe26Ze077yM6K+75a6M5ZCO5YaN5L+u5pS55Zu+54mH6Lev5b6EDQogICAgICB2YXIgdGhhdCA9IHRoaXM7DQogICAgICByZWFkZXIub25sb2FkID0gZnVuY3Rpb24gKCkgew0KICAgICAgICAvL+WbnuaYvue7meS4iuaWueWbvueJh+S4rQ0KICAgICAgICB0aGF0LmxvZ2luRm9ybS5hdmF0YXIgPSB0aGlzLnJlc3VsdDsNCiAgICAgIH07DQogICAgICBpZiAoDQogICAgICAgIGZpbGUudHlwZSA9PSAiaW1hZ2UvcG5nIiB8fA0KICAgICAgICBmaWxlLnR5cGUgPT0gImltYWdlL2pwZyIgfHwNCiAgICAgICAgZmlsZS50eXBlID09ICJpbWFnZS9qcGVnIiB8fA0KICAgICAgICBmaWxlLnR5cGUgPT0gImltYWdlL0pQRyINCiAgICAgICkgew0KICAgICAgICAvLyB0aGlzLiRtZXNzYWdlLmVycm9yKCLkuIrkvKDlpLTlg4/lm77niYfmoLzlvI/kuI3mraPnoa4iKTsNCiAgICAgIH0gZWxzZSB7DQogICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoIuS4iuS8oOWktOWDj+WbvueJh+agvOW8j+S4jeato+ehriIpOw0KICAgICAgfQ0KICAgICAgaWYgKCFpc0x0Mk0pIHsNCiAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcigi5LiK5Lyg5aS05YOP5Zu+54mH5aSn5bCP5LiN6IO96LaF6L+HIDVNQiEiKTsNCiAgICAgIH0NCiAgICAgIHJldHVybiBpc0x0Mk07DQogICAgfSwNCiAgfSwNCn07DQo="},{"version":3,"sources":["editdetail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"editdetail.vue","sourceRoot":"src/components","sourcesContent":["<!--修改个人信息-->\r\n<template>\r\n  <div>\r\n    <el-card class=\"box_card\">\r\n      <div slot=\"header\" class=\"clearfix\" style=\"text-align:left;\">\r\n        <span>修改个人资料</span>\r\n      </div>\r\n      <el-upload\r\n        class=\"avatar-uploader\"\r\n        :action=\"doupload()\"\r\n        :show-file-list=\"false\"\r\n        :on-success=\"handleAvatarSuccess\"\r\n        :before-upload=\"beforeAvatarUpload\"\r\n        style=\"display: inline-block; width: 200px; margin-left: 0px\"\r\n      >\r\n        <!-- 上传成功后展示的图片 -->\r\n        <img v-if=\"loginForm.avatar\" :src=\"loginForm.avatar\" class=\"avatar\" />\r\n        <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n      </el-upload>\r\n      <!-- 表单 -->\r\n      <el-form\r\n        class=\"login_form\"\r\n        :model=\"loginForm\"\r\n        :rules=\"loginFormRules\"\r\n        ref=\"loginFormRef\"\r\n        style=\"width: 400px;margin-left: 30px;\"\r\n      >\r\n        <p style=\"text-align: left\">用户名</p>\r\n        <el-form-item prop=\"username\">\r\n          <el-input\r\n                  prefix-icon=\"iconfont icon-BasicIcons-all-\"\r\n                  placeholder=\"请输入用户名\"\r\n                  v-model=\"loginForm.username\"\r\n                  disabled\r\n          ></el-input>\r\n        </el-form-item>\r\n        <p style=\"text-align: left\">昵称</p>\r\n        <el-form-item prop=\"nickname\">\r\n          <el-input\r\n                  prefix-icon=\"iconfont icon-BasicIcons-all-\"\r\n                  placeholder=\"请输入昵称\"\r\n                  v-model=\"loginForm.nickname\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        <el-form-item class=\"form_button\">\r\n          <el-button type=\"primary\" round class=\"btn1\" @click=\"submit()\">提交<i class=\"el-icon-right\"></i></el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nexport default {\r\n  mounted(){\r\n    this.loginForm = JSON.parse(localStorage.getItem('userdata'))\r\n  },\r\n  data() {\r\n    return {\r\n      imageUrl:\r\n        \"https://img1.baidu.com/it/u=2820222784,2850106904&fm=253&app=138&size=w931&n=0&f=JPEG&fmt=auto?sec=1665075600&t=57bf9c1de8fcdd94ce92c892682a1fe3\",\r\n      loginForm: {\r\n        username: \"\",\r\n        nickname:\"\",\r\n        avatar:\"\"\r\n      },\r\n      loginFormRules: {\r\n        username: [\r\n          { required: true, message: \"请输入账号\", trigger: \"blur\" },\r\n          // { message: '长度最多不超过 12 个字符', trigger: 'blur' }\r\n        ],\r\n        nickname: [\r\n          { required: true, message: \"请输入用户名\", trigger: \"blur\" },\r\n        ],\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    submit() {\r\n      this.$refs.loginFormRef.validate(async (valid) => {\r\n        if (!valid) return this.$message.error(\"表单验证失败！\");\r\n        console.log(this.loginForm);\r\n        var user = this.loginForm;\r\n        console.log(user);\r\n        const result = await this.$http.put(\r\n          \"/user/infoModify\",\r\n          this.loginForm,{\r\n                  headers: {\r\n                    Authorization: \"Bearer \" + JSON.parse(localStorage.getItem('userdata')).token\r\n                  }\r\n                }\r\n        );\r\n        console.log(\"login\", result);\r\n        if (result.data.code === 200) {\r\n          this.$message.success(\"修改成功\");\r\n          localStorage.setItem(\"userdata\", JSON.stringify(result.data.obj));\r\n          console.log(\r\n            \"localstorage\",\r\n            JSON.parse(localStorage.getItem(\"userdata\"))\r\n          );\r\n        } else {\r\n          this.$message.error(result.data.message);\r\n          // location.reload();\r\n        }\r\n        // const res = await this.$http.get('login', { params: this.loginForm })\r\n      });\r\n    },\r\n    resetForm(formName) {\r\n      this.$refs[formName].resetFields();\r\n    },\r\n    // 封装上传文件请求\r\n    doupload() {\r\n      return axios.defaults.baseURL + \"/file/upload\";\r\n    },\r\n    // 成功上传之后的回调函数\r\n    handleAvatarSuccess(res,) {\r\n      this.loginForm.avatar = res.obj\r\n      console.log(res);\r\n    },\r\n    beforeAvatarUpload(file) {\r\n      // const isJPG = file.type == \"image/png\";\r\n      const isLt2M = file.size / 1024 / 1024 < 5;\r\n      console.log(file);\r\n      // 实例化一个阅读器对象\r\n      var reader = new FileReader();\r\n      // 读取文件的路径，没有返回值,结果在reader.result里\r\n      reader.readAsDataURL(file);\r\n      // 读取需要时间，读完后再修改图片路径\r\n      var that = this;\r\n      reader.onload = function () {\r\n        //回显给上方图片中\r\n        that.loginForm.avatar = this.result;\r\n      };\r\n      if (\r\n        file.type == \"image/png\" ||\r\n        file.type == \"image/jpg\" ||\r\n        file.type == \"image/jpeg\" ||\r\n        file.type == \"image/JPG\"\r\n      ) {\r\n        // this.$message.error(\"上传头像图片格式不正确\");\r\n      } else {\r\n        this.$message.error(\"上传头像图片格式不正确\");\r\n      }\r\n      if (!isLt2M) {\r\n        this.$message.error(\"上传头像图片大小不能超过 5MB!\");\r\n      }\r\n      return isLt2M;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.box_card {\r\n  width: 550px;\r\n}\r\n\r\n.psdForm {\r\n  padding-right: 30px;\r\n}\r\n\r\n.resetBtn {\r\n  margin-left: 30px;\r\n}\r\n.btn1 {\r\n  width: 150px;\r\n}\r\n.avatar-uploader .el-upload {\r\n  border: 1px dashed #d9d9d9;\r\n  border-radius: 100px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n// .avatar-uploader .el-upload:hover {\r\n// //   border-color: #409eff;\r\n// }\r\n.avatar-uploader-icon {\r\n  font-size: 28px;\r\n  color: #8c939d;\r\n  width: 178px;\r\n  height: 178px;\r\n  line-height: 178px;\r\n  text-align: center;\r\n}\r\n.avatar {\r\n  width: 178px;\r\n  height: 178px;\r\n  display: block;\r\n  border-radius: 100px;\r\n}\r\n//把上传文件的几个字隐藏掉\r\n.el-upload--text input{\r\n  display: none;\r\n}\r\n</style>\r\n"]}]}