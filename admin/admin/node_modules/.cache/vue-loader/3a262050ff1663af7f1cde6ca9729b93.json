{"remainingRequest":"C:\\Users\\Lenovo\\Desktop\\CRM\\admin\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Lenovo\\Desktop\\CRM\\admin\\admin\\src\\views\\videoone\\videoupload.vue?vue&type=style&index=0&id=08717152&lang=less&scoped=true&","dependencies":[{"path":"C:\\Users\\Lenovo\\Desktop\\CRM\\admin\\admin\\src\\views\\videoone\\videoupload.vue","mtime":1670672381064},{"path":"C:\\Users\\Lenovo\\Desktop\\CRM\\admin\\admin\\node_modules\\css-loader\\dist\\cjs.js","mtime":1666323413935},{"path":"C:\\Users\\Lenovo\\Desktop\\CRM\\admin\\admin\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1666323416977},{"path":"C:\\Users\\Lenovo\\Desktop\\CRM\\admin\\admin\\node_modules\\postcss-loader\\src\\index.js","mtime":1666323415315},{"path":"C:\\Users\\Lenovo\\Desktop\\CRM\\admin\\admin\\node_modules\\less-loader\\dist\\cjs.js","mtime":1666323414827},{"path":"C:\\Users\\Lenovo\\Desktop\\CRM\\admin\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1666323412932},{"path":"C:\\Users\\Lenovo\\Desktop\\CRM\\admin\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1666323415965}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5hdmF0YXItdXBsb2FkZXItaWNvbiB7CiAgICBib3JkZXI6IDFweCBkYXNoZWQgI2Q5ZDlkOSAhaW1wb3J0YW50Owp9Ci5hdmF0YXItdXBsb2FkZXIgLmVsLXVwbG9hZCB7CiAgICBib3JkZXI6IDFweCBkYXNoZWQgI2Q5ZDlkOSAhaW1wb3J0YW50OwogICAgLypib3JkZXItcmFkaXVzOiA2cHggIWltcG9ydGFudDsqLwogICAgcG9zaXRpb246IHJlbGF0aXZlICFpbXBvcnRhbnQ7CiAgICBvdmVyZmxvdzogaGlkZGVuICFpbXBvcnRhbnQ7Cn0KLmF2YXRhci11cGxvYWRlciAuZWwtdXBsb2FkOmhvdmVyIHsKICAgIGJvcmRlcjogMXB4IGRhc2hlZCAjZDlkOWQ5ICFpbXBvcnRhbnQ7CiAgICBib3JkZXItY29sb3I6ICM0MDllZmY7Cn0KLmF2YXRhci11cGxvYWRlci1pY29uIHsKICAgIGZvbnQtc2l6ZTogMjhweDsKICAgIGNvbG9yOiAjOGM5MzlkOwogICAgd2lkdGg6IDMwMHB4OwogICAgaGVpZ2h0OiAxNzhweDsKICAgIGxpbmUtaGVpZ2h0OiAxNzhweDsKICAgIHRleHQtYWxpZ246IGNlbnRlcjsKfQouYXZhdGFyIHsKICAgIHdpZHRoOiAzMDBweDsKICAgIGhlaWdodDogMTc4cHg7CiAgICBkaXNwbGF5OiBibG9jazsKfQo="},{"version":3,"sources":["videoupload.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"videoupload.vue","sourceRoot":"src/views/videoone","sourcesContent":["<!--视频列表-->\r\n<template>\r\n    <div style=\"text-align: left\">\r\n        <el-card>\r\n            <el-breadcrumb style=\"margin-bottom:15px;\" separator=\"/\">\r\n                <el-breadcrumb-item :to=\"{ path: '/' }\">首页</el-breadcrumb-item>\r\n                <el-breadcrumb-item :to=\"{ path: '/videoone' }\">轮播视频</el-breadcrumb-item>\r\n                <el-breadcrumb-item>视频上传</el-breadcrumb-item>\r\n            </el-breadcrumb>\r\n            <el-divider></el-divider>\r\n            <el-form ref=\"form1\" :model=\"form1\" label-width=\"80px\" :rules=\"rules\">\r\n                <el-form-item label=\"视频标题\" style=\"width: 450px\" prop=\"title\">\r\n                    <el-input v-model=\"form1.title\"></el-input>\r\n                </el-form-item>\r\n                <!-- 视频上传 -->\r\n                <el-form-item\r\n                        label=\"视频上传\"\r\n                        prop=\"storageurl\"\r\n                        style=\"width: 300px\"\r\n                >\r\n                    <el-upload\r\n                            class=\"avatar-uploader el-upload--text\"\r\n                            :action=\"doupload()\"\r\n                            :show-file-list=\"false\"\r\n                            :on-success=\"handleVideoSuccess\"\r\n                            :before-upload=\"beforeUploadVideo\"\r\n                    >\r\n                        <!--                已经上传了视频则播放，未上传就显示图标-->\r\n                        <video v-if=\"videoForm.storageurl != ''\"\r\n                               :src=\"videoForm.storageurl\"\r\n                               class=\"avatar\"\r\n                               controls=\"controls\"\r\n                        ></video>\r\n                        <i v-else-if=\"videoForm.storageurl == ''\" class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n                    </el-upload>\r\n                </el-form-item>\r\n                <!--选项-->\r\n                <el-form-item>\r\n                    <el-button type=\"primary\" @click=\"onSubmit1\">上传</el-button>\r\n                    <el-button @click=\"changeUrl\">取消</el-button>\r\n                </el-form-item>\r\n            </el-form>\r\n        </el-card>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n    export default {\r\n        data() {\r\n            return {\r\n                hasRole:null,\r\n                pageName:\"视频上传\",\r\n\r\n                //视频表单信息\r\n                form1: {\r\n                    title: \"\",\r\n                },\r\n                //视频地址\r\n                videoForm: {\r\n                    storageurl: \"\",\r\n                },\r\n                //文章表单验证\r\n                rules: {\r\n                    title: [{ required: true, message: \"请输入标题\", trigger: \"blur\" }],\r\n                },\r\n            };\r\n        },\r\n\r\n        mounted() {\r\n\r\n            this.$http.get(\r\n                `/role/getRole?uid=${JSON.parse(localStorage.getItem('userdata')).id}`,{\r\n                    headers: {\r\n                        Authorization: \"Bearer \" + JSON.parse(localStorage.getItem('userdata')).token\r\n                    }\r\n                }\r\n            ).then(res=>{\r\n                let RoleName=res.data.obj;\r\n                if(RoleName.includes(this.pageName)){\r\n                    this.hasRole=true;\r\n                }else{\r\n                    this.hasRole=false;\r\n                }\r\n                if(this.hasRole==false){\r\n                    this.$message.error(\"无权访问\");\r\n                    this.jump(\"/404\");\r\n                    return;\r\n                }\r\n                this.$forceUpdate();\r\n            })\r\n        },\r\n\r\n\r\n        methods: {\r\n            //this.jump(\"/404\");\r\n            jump(path) {\r\n                this.$router.push(path);\r\n            },\r\n            changeUrl(){\r\n                location.reload();\r\n            },\r\n\r\n            // 提交上传图片/视频请求\r\n            doupload() {\r\n                return axios.defaults.baseURL + \"/file/upload\";\r\n            },\r\n\r\n            // 上传视频\r\n            onSubmit1() {\r\n                this.$refs.form1.validate(async (valid) => {\r\n                    if (!valid) return this.$message.error(\"发布失败！\");\r\n                    console.log(this.form1);\r\n                    this.form1.videoUrl = this.videoForm.storageurl;\r\n                    this.form1.uid = JSON.parse(localStorage.getItem(\"userdata\")).id;\r\n                    this.form1.name = this.form1.title;\r\n                    const result = await this.$http.post(\"/videoone/add\", this.form1,{\r\n                        headers: {\r\n                            Authorization: \"Bearer \" + JSON.parse(localStorage.getItem('userdata')).token\r\n                        }\r\n                    });\r\n                    // console.log(\"---\",result);\r\n                    if (result.data.code == 200) {\r\n                        this.$message.success(result.data.message);\r\n                        location.reload();\r\n                    } else {\r\n                        this.$message.error(result.data.message);\r\n                    }\r\n                });\r\n            },\r\n            //上传视频前的回调函数\r\n            beforeUploadVideo(file) {\r\n                console.log(file);\r\n                if (\r\n                    [\r\n                        \"video/mp4\",\r\n                        \"video/ogg\",\r\n                        \"video/flv\",\r\n                        \"video/avi\",\r\n                        \"video/wmv\",\r\n                        \"video/rmvb\",\r\n                    ].indexOf(file.type) === -1\r\n                ) {\r\n                    this.$message.error(\"请上传正确的视频格式\");\r\n                    return false;\r\n                }\r\n            },\r\n            // 获取上传视频地址\r\n            handleVideoSuccess(res, file) {\r\n                console.log(res,file);\r\n                this.videoForm.storageurl = res.obj;\r\n            },\r\n        },\r\n    };\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n    .avatar-uploader-icon {\r\n        border: 1px dashed #d9d9d9 !important;\r\n    }\r\n    .avatar-uploader .el-upload {\r\n        border: 1px dashed #d9d9d9 !important;\r\n        /*border-radius: 6px !important;*/\r\n        position: relative !important;\r\n        overflow: hidden !important;\r\n    }\r\n    .avatar-uploader .el-upload:hover {\r\n        border: 1px dashed #d9d9d9 !important;\r\n        border-color: #409eff;\r\n    }\r\n    .avatar-uploader-icon {\r\n        font-size: 28px;\r\n        color: #8c939d;\r\n        width: 300px;\r\n        height: 178px;\r\n        line-height: 178px;\r\n        text-align: center;\r\n    }\r\n    .avatar {\r\n        width: 300px;\r\n        height: 178px;\r\n        display: block;\r\n    }\r\n</style>\r\n"]}]}