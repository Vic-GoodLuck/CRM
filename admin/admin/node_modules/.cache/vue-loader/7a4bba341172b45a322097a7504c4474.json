{"remainingRequest":"C:\\Users\\Lenovo\\Desktop\\blog\\blogadmin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Lenovo\\Desktop\\blog\\blogadmin\\src\\views\\question\\index.vue?vue&type=style&index=0&id=b97744fa&lang=less&scoped=true&","dependencies":[{"path":"C:\\Users\\Lenovo\\Desktop\\blog\\blogadmin\\src\\views\\question\\index.vue","mtime":1670847985636},{"path":"C:\\Users\\Lenovo\\Desktop\\blog\\blogadmin\\node_modules\\css-loader\\dist\\cjs.js","mtime":1666323413935},{"path":"C:\\Users\\Lenovo\\Desktop\\blog\\blogadmin\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1666323416977},{"path":"C:\\Users\\Lenovo\\Desktop\\blog\\blogadmin\\node_modules\\postcss-loader\\src\\index.js","mtime":1666323415315},{"path":"C:\\Users\\Lenovo\\Desktop\\blog\\blogadmin\\node_modules\\less-loader\\dist\\cjs.js","mtime":1666323414827},{"path":"C:\\Users\\Lenovo\\Desktop\\blog\\blogadmin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1666323412932},{"path":"C:\\Users\\Lenovo\\Desktop\\blog\\blogadmin\\node_modules\\vue-loader\\lib\\index.js","mtime":1666323415965}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouY2FyaWQgewogICAgZGlzcGxheTogbm9uZTsKfQouZGVtby1mb3JtLWlubGluZSB7CiAgICBkaXNwbGF5OiBmbGV4OwogICAgLypmbGV4OiBsZWZ0OyovCn0KLmVsLWZvcm0taXRlbSB7CiAgICBtYXJnaW4tYm90dG9tOiAyMHB4Owp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappingssgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/question","sourcesContent":["<!--用户列表-->\r\n<template>\r\n    <div>\r\n        <el-card class=\"box-card\">\r\n            <el-breadcrumb style=\"margin-bottom:15px;\" separator=\"/\">\r\n                <el-breadcrumb-item :to=\"{ path: '/' }\">首页</el-breadcrumb-item>\r\n                <el-breadcrumb-item :to=\"{ path: '/questiondetail' }\">题库管理</el-breadcrumb-item>\r\n                <el-breadcrumb-item>题库信息</el-breadcrumb-item>\r\n            </el-breadcrumb>\r\n            <el-divider></el-divider>\r\n            <div style=\"display: flex\">\r\n                <div style=\"padding: 10px 0;\">\r\n                    <el-input v-model=\"question_select\" class=\"ml-5\" suffix-icon=\"el-icon-search\" placeholder=\"请输入题目描述\" style=\"width: 300px;margin:10px;\"></el-input>\r\n                    <el-button @click=\"conditionSelect\" class=\"ml-5\" type=\"primary\">搜索</el-button>\r\n                </div>\r\n                <div></div>\r\n            </div>\r\n            <!-- 添加信息 -->\r\n            <el-form :inline=\"true\" :model=\"formInline\" class=\"demo-form-inline\">\r\n                <el-form-item>\r\n                    <div>\r\n                        <el-button type=\"primary\" @click=\"dialogFormVisible = true\">添加 <i class=\"el-icon-circle-plus-outline\"></i></el-button>\r\n                        <el-button type=\"danger\" @click=\"deleteBatch\">批量删除 <i class=\"el-icon-remove-outline\"></i></el-button>\r\n                    </div>\r\n                    <!--          添加用户弹出框-->\r\n                    <el-dialog\r\n                            title=\"添加题目\"\r\n                            :visible.sync=\"dialogFormVisible\"\r\n                            width=\"40%\"\r\n                            append-to-body\r\n                            center\r\n                    >\r\n                        <el-form\r\n                                :model=\"form\"\r\n                                style=\":form\"\r\n                                :rules=\"loginFormRules\"\r\n                                ref=\"loginFormRef\"\r\n                        >\r\n                            <el-form-item\r\n                                    label=\"题目描述:\"\r\n                                    :label-width=\"formLabelWidth\"\r\n                                    prop=\"content\"\r\n                            >\r\n                                <el-input v-model=\"form.content\" autocomplete=\"off\"></el-input>\r\n                            </el-form-item>\r\n                            <el-form-item\r\n                                    label=\"选项A:\"\r\n                                    :label-width=\"formLabelWidth\"\r\n                                    prop=\"option1\"\r\n                            >\r\n                                <el-input v-model=\"form.option1\" autocomplete=\"off\"></el-input>\r\n                            </el-form-item>\r\n                            <el-form-item\r\n                                    label=\"选项B:\"\r\n                                    :label-width=\"formLabelWidth\"\r\n                                    prop=\"option2\"\r\n                            >\r\n                                <el-input v-model=\"form.option2\" autocomplete=\"off\"></el-input>\r\n                            </el-form-item>\r\n                            <el-form-item\r\n                                    label=\"选项C:\"\r\n                                    :label-width=\"formLabelWidth\"\r\n                                    prop=\"option3\"\r\n                            >\r\n                                <el-input v-model=\"form.option3\" autocomplete=\"off\"></el-input>\r\n                            </el-form-item>\r\n                            <el-form-item\r\n                                    label=\"选项D:\"\r\n                                    :label-width=\"formLabelWidth\"\r\n                                    prop=\"option4\"\r\n                            >\r\n                                <el-input v-model=\"form.option4\" autocomplete=\"off\"></el-input>\r\n                            </el-form-item>\r\n                            <el-form-item label=\"答案:\" :label-width=\"formLabelWidth\">\r\n                                <el-select v-model=\"form.answer\">\r\n                                    <el-option label=\"选项A\" value=\"A\"></el-option>\r\n                                    <el-option label=\"选项B\" value=\"B\"></el-option>\r\n                                    <el-option label=\"选项C\" value=\"C\"></el-option>\r\n                                    <el-option label=\"选项D\" value=\"D\"></el-option>\r\n                                </el-select>\r\n                            </el-form-item>\r\n                        </el-form>\r\n                        <div slot=\"footer\" class=\"dialog-footer\">\r\n                            <el-button type=\"primary\" @click=\"submitadd()\">添加</el-button>\r\n                            <el-button @click=\"dialogFormVisible = false\">取消</el-button>\r\n                        </div>\r\n                    </el-dialog>\r\n                </el-form-item>\r\n            </el-form>\r\n\r\n            <!-- 编辑用户信息 -->\r\n            <el-dialog\r\n                    title=\"修改题目信息\"\r\n                    :visible.sync=\"dialogFormVisible1\"\r\n                    width=\"40%\"\r\n                    append-to-body\r\n                    center\r\n            >\r\n                <el-form\r\n                        :model=\"form1\"\r\n                        style=\":form1\"\r\n                        :rules=\"loginFormRules\"\r\n                        ref=\"loginFormRef\"\r\n                >\r\n                    <el-form-item\r\n                            label=\"题目描述:\"\r\n                            :label-width=\"formLabelWidth\"\r\n                            prop=\"content\"\r\n                    >\r\n                        <el-input\r\n                                v-model=\"form1.content\"\r\n                                autocomplete=\"off\"\r\n                        ></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item\r\n                            label=\"选项A:\"\r\n                            :label-width=\"formLabelWidth\"\r\n                            prop=\"option1\"\r\n                    >\r\n                        <el-input\r\n                                v-model=\"form1.option1\"\r\n                                autocomplete=\"off\"\r\n                        ></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item\r\n                            label=\"选项B:\"\r\n                            :label-width=\"formLabelWidth\"\r\n                            prop=\"option2\"\r\n                    >\r\n                        <el-input\r\n                                v-model=\"form1.option2\"\r\n                                autocomplete=\"off\"\r\n                        ></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item\r\n                            label=\"选项C:\"\r\n                            :label-width=\"formLabelWidth\"\r\n                            prop=\"option3\"\r\n                    >\r\n                        <el-input\r\n                                v-model=\"form1.option3\"\r\n                                autocomplete=\"off\"\r\n                        ></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item\r\n                            label=\"选项D:\"\r\n                            :label-width=\"formLabelWidth\"\r\n                            prop=\"option4\"\r\n                    >\r\n                        <el-input\r\n                                v-model=\"form1.option4\"\r\n                                autocomplete=\"off\"\r\n                        ></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"答案:\" :label-width=\"formLabelWidth\">\r\n                        <el-select v-model=\"form1.answer\" :placeholder=\"form1.answer\">\r\n                            <el-option\r\n                                    v-for=\"item in options\"\r\n                                    :key=\"item.value\"\r\n                                    :label=\"item.label\"\r\n                                    :value=\"item.value\"\r\n                            >\r\n                            </el-option>\r\n                        </el-select>\r\n                    </el-form-item>\r\n                </el-form>\r\n                <div slot=\"footer\" class=\"dialog-footer\">\r\n                    <el-button type=\"primary\" @click=\"editdetail()\">提交</el-button>\r\n                    <el-button @click=\"dialogFormVisible1 = false\">取消</el-button>\r\n                </div>\r\n            </el-dialog>\r\n\r\n            <!--      用户信息表格-->\r\n            <el-table\r\n                    :data=\"tableData\"\r\n                    border\r\n                    :row-style=\"{ height: '30px' }\"\r\n                    :cell-style=\"{ padding: '0px' }\"\r\n                    max-height=\"550\"\r\n                    style=\"width: 95%\"\r\n                    @selection-change=\"handleSelectionChange\">\r\n                <el-table-column\r\n                        type=\"selection\"\r\n                        width=\"40\">\r\n                </el-table-column>\r\n                <el-table-column prop=\"content\" label=\"题目描述\" width=\"280\">\r\n                </el-table-column>\r\n                <el-table-column prop=\"option1\" label=\"选项A\" width=\"150\">\r\n                </el-table-column>\r\n                <el-table-column prop=\"option2\" label=\"选项B\" width=\"150\">\r\n                </el-table-column>\r\n                <el-table-column prop=\"option3\" label=\"选项C\" width=\"150\">\r\n                </el-table-column>\r\n                <el-table-column prop=\"option4\" label=\"选项D\" width=\"150\">\r\n                </el-table-column>\r\n                <el-table-column prop=\"answer\" label=\"答案\" width=\"45\">\r\n                </el-table-column>\r\n                <el-table-column fixed=\"right\" label=\"操作\" width=\"180\">\r\n                    <template slot-scope=\"scope\">\r\n                        <el-button @click=\"handleClick(scope.row)\" type=\"success\" size=\"small\">编辑 <i class=\"el-icon-edit\"></i></el-button>\r\n                        <el-button @click=\"deteleQuestion(scope.row)\" type=\"danger\" size=\"small\">删除 <i class=\"el-icon-remove-outline\"></i></el-button>\r\n                    </template>\r\n                </el-table-column>\r\n            </el-table>\r\n            <!-- 分页 -->\r\n            <div class=\"block\">\r\n                <el-pagination\r\n                        @size-change=\"handleSizeChange\"\r\n                        @current-change=\"handleCurrentChange\"\r\n                        :current-page.sync=\"currentPage\"\r\n                        :page-size=\"pagesize\"\r\n                        layout=\"prev, pager, next, jumper,->,total\"\r\n                        :total=\"total\"\r\n                        style=\"margin-top: 20px;\"\r\n                >\r\n                </el-pagination>\r\n            </div>\r\n        </el-card>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        mounted() {\r\n            this.$http.get(\r\n                `/role/getRole?uid=${JSON.parse(localStorage.getItem('userdata')).id}`,{\r\n                    headers: {\r\n                        Authorization: \"Bearer \" + JSON.parse(localStorage.getItem('userdata')).token\r\n                    }\r\n                }\r\n            ).then(res=>{\r\n                let RoleName=res.data.obj;\r\n                if(RoleName.includes(this.pageName)){\r\n                    this.hasRole=true;\r\n                }else{\r\n                    this.hasRole=false;\r\n                }\r\n                if(this.hasRole==false){\r\n                    this.$message.error(\"无权访问\");\r\n                    this.jump(\"/404\");\r\n                    return;\r\n                }\r\n                this.questiondata();\r\n                this.$forceUpdate();\r\n            })\r\n        },\r\n\r\n        data() {\r\n            return {\r\n                hasRole:null,\r\n                pageName:\"题库列表\",\r\n\r\n                options: [\r\n                    {\r\n                        value: \"A\",\r\n                        label: \"选项A\",\r\n                    },\r\n                    {\r\n                        value: \"B\",\r\n                        label: \"选项B\",\r\n                    },\r\n                    {\r\n                        value: \"C\",\r\n                        label: \"选项C\",\r\n                    },\r\n                    {\r\n                        value: \"D\",\r\n                        label: \"选项D\",\r\n                    },\r\n                ],\r\n\r\n                question_select:\"\",\r\n\r\n                multipleSelection:[],\r\n                total: 1000,\r\n                // 分页\r\n                pagesize: 10, //每页多少数据\r\n                currentPage: 1, //默认当前页为第一页\r\n                //添加用户对话框\r\n                dialogFormVisible: false,\r\n                form: {\r\n                    content: \"\",\r\n                    option1: \"\",\r\n                    option2: \"\",\r\n                    option3: \"\",\r\n                    option4: \"\",\r\n                    answer: \"A\",\r\n                },\r\n                //修改用户的对话框\r\n                dialogFormVisible1: false,\r\n                form1: {\r\n                    content: \"\",\r\n                    option1: \"\",\r\n                    option2: \"\",\r\n                    option3: \"\",\r\n                    option4: \"\",\r\n                    answer: \"\",\r\n                },\r\n                formLabelWidth: \"100px\",\r\n                formInline: {\r\n                    question: \"\",\r\n                },\r\n                tableData: [],\r\n                loginFormRules: {\r\n                    content: [\r\n                        { required: true, message: \"请输入题目描述\", trigger: \"blur\" },\r\n                    ],\r\n                    option1: [\r\n                        { required: true, message: \"请输入选项A\", trigger: \"blur\" },\r\n                    ],\r\n                    option2: [\r\n                        { required: true, message: \"请输入选项B\", trigger: \"blur\" },\r\n                    ],\r\n                    option3: [\r\n                        { required: true, message: \"请输入选项C\", trigger: \"blur\" },\r\n                    ],\r\n                    option4: [\r\n                        { required: true, message: \"请输入选项D\", trigger: \"blur\" },\r\n                    ],\r\n                    answer: [\r\n                        { required: true, message: \"请选择答案\", trigger: \"blur\" },\r\n                    ],\r\n                },\r\n            };\r\n        },\r\n        methods: {\r\n            //this.jump(\"/404\");\r\n            jump(path) {\r\n                this.$router.push(path);\r\n            },\r\n            // 获取第一页表格数据\r\n            async questiondata() {\r\n                const result = await this.$http.get(\r\n                    `/question/list?currentPage=${1}&size=${this.pagesize}`,{\r\n                        headers: {\r\n                            Authorization: \"Bearer \" + JSON.parse(localStorage.getItem('userdata')).token\r\n                        }\r\n                    }\r\n                );\r\n                if (result.status === 200) {\r\n                    this.tableData = result.data.data;\r\n                    this.total = Number(result.data.total);\r\n                    this.currentPage=1;\r\n                    this.$forceUpdate();\r\n                }\r\n            },\r\n\r\n\r\n            handleSelectionChange(val){\r\n                this.multipleSelection=val;\r\n                console.log(val);\r\n            },\r\n            handleClick(row) {\r\n                // 点击编辑获取信息\r\n                this.dialogFormVisible1 = true;\r\n                var tmp=Object.assign({},row);\r\n                this.form1 = tmp;\r\n                console.log(row);\r\n            },\r\n            handleSizeChange(val) {\r\n                console.log(`每页 ${val} 条`);\r\n            },\r\n            async handleCurrentChange(val) {\r\n                if(this.question_select==\"\"){\r\n                    const result = await this.$http.get(\r\n                        `/question/list?currentPage=${val}&size=${this.pagesize}`,{\r\n                            headers: {\r\n                                Authorization: \"Bearer \" + JSON.parse(localStorage.getItem('userdata')).token\r\n                            }\r\n                        }\r\n                    );\r\n                    if (result.status === 200) {\r\n                        this.tableData = result.data.data;\r\n                        this.total = Number(result.data.total);\r\n                        this.$forceUpdate();\r\n                    }\r\n                }else{\r\n                    const result = await this.$http.get(\r\n                        `/question/conditionSelect?currentPage=${val}&size=${this.pagesize}&question=${this.question_select}`,{\r\n                            headers: {\r\n                                Authorization: \"Bearer \" + JSON.parse(localStorage.getItem('userdata')).token\r\n                            }\r\n                        }\r\n                    );\r\n                    if (result.status === 200) {\r\n                        this.tableData = result.data.data;\r\n                        this.total = Number(result.data.total);\r\n                        this.$forceUpdate();\r\n                    } else {\r\n                        this.$message.error(\"查询失败\");\r\n                    }\r\n                }\r\n            },\r\n\r\n            //条件查询\r\n            async conditionSelect(){\r\n                this.currentPage=1;\r\n                const result = await this.$http.get(\r\n                    `/question/conditionSelect?currentPage=${1}&size=${this.pagesize}&question=${this.question_select}`,{\r\n                        headers: {\r\n                            Authorization: \"Bearer \" + JSON.parse(localStorage.getItem('userdata')).token\r\n                        }\r\n                    }\r\n                );\r\n                if (result.status === 200) {\r\n                    this.tableData = result.data.data;\r\n                    this.total = Number(result.data.total);\r\n                    this.$forceUpdate();\r\n                    this.$message.success(\"查询成功\");\r\n                } else {\r\n                    this.$message.error(\"查询失败\");\r\n                }\r\n            },\r\n\r\n            // 添加用户信息\r\n            submitadd() {\r\n                this.$refs.loginFormRef.validate(async (valid) => {\r\n                    if (!valid) return this.$message.error(\"表单验证失败！\");\r\n                    // 添加用户信息数据\r\n                    console.log(this.form);\r\n                    const result = await this.$http.post(\"/question/add\", this.form,{\r\n                        headers: {\r\n                            Authorization: \"Bearer \" + JSON.parse(localStorage.getItem('userdata')).token\r\n                        }\r\n                    });\r\n                    console.log(\"addquestion\", result);\r\n                    if (result.data.code === 200) {\r\n                        this.$message.success(\"添加成功!\");\r\n                        await this.questiondata();\r\n                        this.$forceUpdate();\r\n                        this.dialogFormVisible = false;\r\n                        //清除数据\r\n                        this.form = {\r\n                            content: \"\",\r\n                            option1: \"\",\r\n                            option2: \"\",\r\n                            option3: \"\",\r\n                            option4: \"\",\r\n                            answer: \"A\",\r\n                        }\r\n                    } else if (result.data.code === 500) {\r\n                        this.$message.error(result.data.message);\r\n                    } else {\r\n                        this.$message.error(result.data.message);\r\n                    }\r\n                });\r\n            },\r\n            // 修改用户信息\r\n            async editdetail() {\r\n                console.log(\"修改题目信息\", this.form1);\r\n                const result = await this.$http.put(\"/question/infoModify\", this.form1,{\r\n                    headers: {\r\n                        Authorization: \"Bearer \" + JSON.parse(localStorage.getItem('userdata')).token\r\n                    }\r\n                });\r\n                if (result.data.code === 200) {\r\n                    this.$message.success(\"修改成功！\");\r\n                    await this.questiondata();\r\n                    this.$forceUpdate();\r\n                    this.dialogFormVisible1 = false;\r\n                } else if (result.data.code === 500) {\r\n                    this.$message.error(result.data.message);\r\n                    await this.questiondata();\r\n                    this.$forceUpdate();\r\n                } else {\r\n                    this.$message.error(\"修改失败!\");\r\n                }\r\n            },\r\n            // 删除用户信息\r\n            deteleQuestion(question) {\r\n                console.log(question.id);\r\n                this.$confirm(\"此操作将永久删除, 是否继续?\", \"提示\", {\r\n                    confirmButtonText: \"确定\",\r\n                    cancelButtonText: \"取消\",\r\n                    type: \"warning\",\r\n                })\r\n                .then(async () => {\r\n                    const result = await this.$http.delete(\"/question/delete?id=\" + question.id,{\r\n                        headers: {\r\n                            Authorization: \"Bearer \" + JSON.parse(localStorage.getItem('userdata')).token\r\n                        }\r\n                    });\r\n                    if (result.data.code == 200) {\r\n                        this.$message.success(result.data.message);\r\n                        await this.questiondata();\r\n                        this.$forceUpdate();\r\n                    } else {\r\n                        this.$message.error(result.data.message);\r\n                    }\r\n                })\r\n            },\r\n            deleteBatch(){\r\n                let ids = this.multipleSelection.map(v=>v.id);\r\n                this.$confirm(\"此操作将永久删除, 是否继续?\", \"提示\", {\r\n                    confirmButtonText: \"确定\",\r\n                    cancelButtonText: \"取消\",\r\n                    type: \"warning\",\r\n                })\r\n                .then(async () => {\r\n                    const result = await this.$http.post(\"/question/deletebatch\" , ids ,{\r\n                        headers: {\r\n                            Authorization: \"Bearer \" + JSON.parse(localStorage.getItem('userdata')).token\r\n                        }\r\n                    });\r\n                    if (result.data.code == 200) {\r\n                        this.$message.success(result.data.message);\r\n                        await this.questiondata();\r\n                        this.$forceUpdate();\r\n                    } else {\r\n                        this.$message.error(result.data.message);\r\n                    }\r\n                })\r\n            },\r\n        },\r\n    };\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n    .carid {\r\n        display: none;\r\n    }\r\n    .demo-form-inline {\r\n        display: flex;\r\n        /*flex: left;*/\r\n    }\r\n    .el-form-item {\r\n        margin-bottom: 20px;\r\n    }\r\n</style>\r\n"]}]}